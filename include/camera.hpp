#ifndef CAMERA_HPP
#define CAMERA_HPP

#include "base.hpp"
#include "vectors.hpp"

class camera : public base
{
public:
    camera();

    void addShake(const float _s) {m_cameraShake += _s;}

    void update(float _dt);

    vec3 getCamPos() {return getPos() + tovec3(m_cameraShakeOffset);}

    void setTPos(vec3 _tPos) {m_tPos = _tPos;}
private:
    //----------------------------------------------------------------------------------------------------------------------
    /// \brief The dimensions of the ortho projection
    //----------------------------------------------------------------------------------------------------------------------
    vec2 m_dim;

    //----------------------------------------------------------------------------------------------------------------------
    /// \brief The current position of the camera shake
    //----------------------------------------------------------------------------------------------------------------------
    float m_cameraShake;

    //----------------------------------------------------------------------------------------------------------------------
    /// \brief The target position of the camera shake
    //----------------------------------------------------------------------------------------------------------------------
    vec2 m_cameraShakeTargetOffset;

    //----------------------------------------------------------------------------------------------------------------------
    /// \brief The current camera shake
    //----------------------------------------------------------------------------------------------------------------------
    vec2 m_cameraShakeOffset;

    //----------------------------------------------------------------------------------------------------------------------
    /// \brief The target position for the camera
    //----------------------------------------------------------------------------------------------------------------------
    vec3 m_tPos;
};

#endif
