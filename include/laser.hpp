#ifndef LASER_HPP
#define LASER_HPP

#include "aiTarget.hpp"
#include "base.hpp"
#include "enemy.hpp"
#include "slotmap.hpp"
#include "weapons.hpp"

//----------------------------------------------------------------------------------------------------------------------
/// \file laser.hpp
/// \brief Contains the laser class.
/// \author Ben Hawkyard
/// \version 1.0
/// \date 11/04/16
/// Revision History :
/// This is the initial version.
/// \class laser
/// \brief Inherits from base, represents a laser and contains data such as faction, damage, colour etc.
//----------------------------------------------------------------------------------------------------------------------

class laser: public base
{
public:
  //----------------------------------------------------------------------------------------------------------------------
  /// \brief ctor for the laser class
  /// \param _p positio
  /// \param _v velocity
  /// \param _ang angle
  /// \param _data copied from weapons.hpp
  /// \param _team the lasers' team
  //----------------------------------------------------------------------------------------------------------------------
	laser(vec3 _p, vec3 _v, float _ang, std::array<float, WEAPS_W> _data, aiTeam _team, aiTarget _parent);

  //----------------------------------------------------------------------------------------------------------------------
  /// \brief returns damage
  //----------------------------------------------------------------------------------------------------------------------
	float getDmg() const {return m_dmg;}

  //----------------------------------------------------------------------------------------------------------------------
  /// \brief returns stopping power
  //----------------------------------------------------------------------------------------------------------------------
  float getStop() const {return m_stop;}

  //----------------------------------------------------------------------------------------------------------------------
  /// \brief updates the laser
  /// \param _dt time difference
  //----------------------------------------------------------------------------------------------------------------------
  void update(float _dt);

  //----------------------------------------------------------------------------------------------------------------------
  /// \brief returns the team
  //----------------------------------------------------------------------------------------------------------------------
  aiTeam getTeam() const  {return m_team;}

  //----------------------------------------------------------------------------------------------------------------------
  /// \brief returns the colour of the laser.
  //----------------------------------------------------------------------------------------------------------------------
  std::array<float, 4> getCol() const {return {{m_col[0], m_col[1], m_col[2], m_power}};}

  //----------------------------------------------------------------------------------------------------------------------
  /// \brief Getter for single colour component.
  /// \param _index index of component to retrieve
  //----------------------------------------------------------------------------------------------------------------------
  float getCol(int _index) const {return m_col[_index];}

  //----------------------------------------------------------------------------------------------------------------------
  /// \brief Getter for laser power.
  //----------------------------------------------------------------------------------------------------------------------
  float getPower() const {return m_power;}

  //----------------------------------------------------------------------------------------------------------------------
  /// \brief Getter for the angle.
  //----------------------------------------------------------------------------------------------------------------------
  float getAng() const {return m_ang;}

  //----------------------------------------------------------------------------------------------------------------------
  /// \brief Getter for the owner.
  //----------------------------------------------------------------------------------------------------------------------
	aiTarget getOwner() {return m_ownerID;}
private:
  //----------------------------------------------------------------------------------------------------------------------
  /// \brief Damage the laser deals.
  //----------------------------------------------------------------------------------------------------------------------
	float m_dmg;

  //----------------------------------------------------------------------------------------------------------------------
  /// \brief Speed of the laser.
  //----------------------------------------------------------------------------------------------------------------------
	float m_spd;

  //----------------------------------------------------------------------------------------------------------------------
  /// \brief Team of the laser.
  //----------------------------------------------------------------------------------------------------------------------
  aiTeam m_team;

  //----------------------------------------------------------------------------------------------------------------------
  /// \brief Angle of the laser.
  //----------------------------------------------------------------------------------------------------------------------
  float m_ang;

  //----------------------------------------------------------------------------------------------------------------------
  /// \brief Colour of the laser.
  //----------------------------------------------------------------------------------------------------------------------
  std::array<float, 3> m_col;

  //----------------------------------------------------------------------------------------------------------------------
  /// \brief Power of the laser, disappears when this reaches zero.
  //----------------------------------------------------------------------------------------------------------------------
  float m_power;

  //----------------------------------------------------------------------------------------------------------------------
  /// \brief Stopping power of the laser.
  //----------------------------------------------------------------------------------------------------------------------
  float m_stop;

  //----------------------------------------------------------------------------------------------------------------------
  /// \brief The unique id of the owner.
  //----------------------------------------------------------------------------------------------------------------------
	aiTarget m_ownerID;
};

#endif

